
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        /* Basisstijlen voor formulier, zorg dat deze ook in style.css komen */
        .form-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            max-width: 800px; /* Iets breder voor items */
            margin: 40px auto;
        }
        .form-container h1 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
        }
        .form-container p {
            text-align: center;
            color: #666;
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #555;
        }
        .form-control, .form-select, .form-textarea {
            width: calc(100% - 20px);
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box; /* Zorgt dat padding binnen de breedte valt */
        }
        .form-select {
            height: 40px; /* Consistente hoogte met input */
        }
        .form-textarea {
            resize: vertical;
            min-height: 80px;
        }
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 30px;
        }
        .btn {
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 16px;
        }
        .btn-primary {
            background-color: #28a745; /* Groen */
            color: white;
            border: none;
        }
        .btn-primary:hover {
            background-color: #218838;
        }
        .btn-secondary {
            background-color: #6c757d; /* Grijs */
            color: white;
            border: none;
        }
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        .btn-danger {
            background-color: #dc3545; /* Rood */
            color: white;
            border: none;
            padding: 5px 10px; /* Smaller voor verwijderen */
            font-size: 14px;
        }
        .btn-danger:hover {
            background-color: #c82333;
        }
        .btn-info {
            background-color: #17a2b8; /* Blauw */
            color: white;
            border: none;
            padding: 8px 15px; /* iets kleiner dan primary/secondary */
            font-size: 15px;
        }
        .btn-info:hover {
            background-color: #138496;
        }

        /* Styling voor dynamische items */
        .order-item-row {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 50px; /* Product, Aantal, Prijs, Verwijderknop */
            gap: 15px;
            align-items: end; /* Knoppen en inputs op dezelfde lijn */
            margin-bottom: 15px;
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 5px;
            background-color: #fcfcfc;
        }
        .order-item-row .form-group {
            margin-bottom: 0; /* Geen extra marge in de rij */
        }
        .order-item-row .form-control, .order-item-row .form-select {
            width: 100%; /* Maak inputs 100% breed in hun grid kolom */
        }
        .order-item-row label {
            font-size: 0.9em;
            color: #777;
            margin-bottom: 4px;
        }
        .order-item-controls {
            text-align: right; /* Verwijderknop rechts uitlijnen */
        }
        #totalPriceDisplay {
            font-size: 1.5em;
            font-weight: bold;
            color: #28a745;
            text-align: right;
            margin-top: 10px;
            padding: 10px;
            background-color: #e9f7ef;
            border-radius: 5px;
            border: 1px solid #28a745;
        }
        .total-price-group {
            margin-bottom: 20px;
            padding-top: 10px;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .total-price-group label {
            font-size: 1.2em;
            font-weight: bold;
        }
    </style>

   
        <nav class="navbar">
            <a href="/" class="logo">Frietkot Beheersysteem</a>
            <div class="nav-links">
                <a href="/admin" class="nav-item">Dashboard</a>
                <a href="/admin/products" class="nav-item">Producten</a>
            </div>
        </nav>
  

    <div class="container">
        <div class="form-container">
            <h1><%= title %></h1>
            <p><%= message %></p>

            <form id="orderForm" action="/admin/test-order/add" method="POST">
                <div class="form-group">
                    <label for="customerName">Klantnaam (optioneel):</label>
                    <input type="text" id="customerName" name="customerName" class="form-control" placeholder="Anonieme klant">
                </div>

                <div class="form-group">
                    <label for="status">Status:</label>
                    <select id="status" name="status" class="form-select" required>
                        <option value="completed">Voltooid</option>
                        <option value="pending" selected>In behandeling</option>
                        <option value="cancelled">Geannuleerd</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="notes">Notities (optioneel):</label>
                    <textarea id="notes" name="notes" rows="3" class="form-textarea" placeholder="Extra notities over de bestelling"></textarea>
                </div>

                <h3 style="margin-top: 30px;">Bestelitems</h3>
                <div id="orderItemsContainer">
                    </div>

                <button type="button" id="addItemBtn" class="btn btn-info" style="margin-bottom: 20px;">+ Item Toevoegen</button>

                <div class="total-price-group">
                    <label>Totaalprijs:</label>
                    <span id="totalPriceDisplay">&euro;0.00</span>
                    <input type="hidden" name="totalPrice" id="hiddenTotalPrice">
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Bestelling Plaatsen</button>
                    <a href="/admin" class="btn btn-secondary">Annuleer</a>
                </div>
            </form>
        </div>
        </div>
 

    <template id="orderItemTemplate">
        <div class="order-item-row">
            <div class="form-group">
                <label>Product:</label>
                <select name="items[INDEX][productId]" class="form-select product-select" required>
                    <option value="">-- Selecteer een product --</option>
                    <% products.forEach(product => { %>
                        <option 
                            value="<%= product.id %>" 
                            data-product-name="<%= product.name %>" 
                            data-unit-price="<%= product.price %>"
                        >
                            <%= product.name %> (&euro;<%= product.price.toFixed(2) %>)
                        </option>
                    <% }); %>
                </select>
                <input type="hidden" name="items[INDEX][productName]" class="product-name-hidden">
                <input type="hidden" name="items[INDEX][unitPrice]" class="unit-price-hidden">
            </div>
            <div class="form-group">
                <label>Aantal:</label>
                <input type="number" name="items[INDEX][quantity]" value="1" min="1" class="form-control item-quantity" required>
            </div>
            <div class="form-group">
                <label>Prijs per stuk:</label>
                <span class="unit-price-display">&euro;0.00</span>
            </div>
            <div class="order-item-controls">
                <button type="button" class="btn btn-danger remove-item-btn">X</button>
            </div>
        </div>
    </template>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const orderItemsContainer = document.getElementById('orderItemsContainer');
            const addItemBtn = document.getElementById('addItemBtn');
            const orderItemTemplate = document.getElementById('orderItemTemplate');
            const totalPriceDisplay = document.getElementById('totalPriceDisplay');
            const hiddenTotalPrice = document.getElementById('hiddenTotalPrice');
            let itemIndex = 0; // Unieke index voor elk item

            // Functie om een nieuwe item-rij toe te voegen
            function addItemRow() {
                const clone = document.importNode(orderItemTemplate.content, true);
                const newRow = clone.querySelector('.order-item-row');

                // Update namen en IDs met de unieke index
                newRow.innerHTML = newRow.innerHTML.replace(/INDEX/g, itemIndex);
                
                // Koppel event listeners
                const productSelect = newRow.querySelector('.product-select');
                const itemQuantity = newRow.querySelector('.item-quantity');
                const removeItemBtn = newRow.querySelector('.remove-item-btn');

                productSelect.addEventListener('change', () => updateItemFields(newRow));
                itemQuantity.addEventListener('input', () => calculateOrderTotal()); // Input event voor direct bijwerken
                removeItemBtn.addEventListener('click', () => removeItemRow(newRow));

                orderItemsContainer.appendChild(newRow);
                updateItemFields(newRow); // Initialiseer de prijs van het zojuist toegevoegde item
                calculateOrderTotal(); // Herbereken het totaal
                itemIndex++;
            }

            // Functie om een item-rij te verwijderen
            function removeItemRow(row) {
                row.remove();
                calculateOrderTotal(); // Herbereken het totaal na verwijdering
            }

            // Functie om de prijsvelden van een item bij te werken
            function updateItemFields(row) {
                const productSelect = row.querySelector('.product-select');
                const productNameHidden = row.querySelector('.product-name-hidden');
                const unitPriceHidden = row.querySelector('.unit-price-hidden');
                const unitPriceDisplay = row.querySelector('.unit-price-display');

                const selectedOption = productSelect.options[productSelect.selectedIndex];

                if (selectedOption && selectedOption.value) {
                    productNameHidden.value = selectedOption.dataset.productName;
                    unitPriceHidden.value = selectedOption.dataset.unitPrice;
                    unitPriceDisplay.textContent = `€${parseFloat(selectedOption.dataset.unitPrice).toFixed(2)}`;
                } else {
                    // Reset als geen product is geselecteerd
                    productNameHidden.value = '';
                    unitPriceHidden.value = '';
                    unitPriceDisplay.textContent = '€0.00';
                }
                calculateOrderTotal(); // Herbereken totaal als itemvelden veranderen
            }

            // Functie om de totale prijs van de bestelling te berekenen
            function calculateOrderTotal() {
                let total = 0;
                const itemRows = orderItemsContainer.querySelectorAll('.order-item-row');

                itemRows.forEach(row => {
                    const quantityInput = row.querySelector('.item-quantity');
                    const unitPriceHidden = row.querySelector('.unit-price-hidden');

                    const quantity = parseInt(quantityInput.value) || 0;
                    const unitPrice = parseFloat(unitPriceHidden.value) || 0;

                    total += (quantity * unitPrice);
                });

                totalPriceDisplay.textContent = `€${total.toFixed(2)}`;
                hiddenTotalPrice.value = total.toFixed(2); // Vul het verborgen veld voor de backend
            }

            // Event listeners
            addItemBtn.addEventListener('click', addItemRow);

            // Voeg bij het laden van de pagina direct één item-rij toe
            addItemRow();
        });
    </script>